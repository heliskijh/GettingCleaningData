fourCyl <- for mtcars[,c("cyl")] == "4"
fourCyl <- for mtcars[,c("cyl", "hp")]
fourCyl <- mtcars[,c("cyl", "hp")]
head(fourCyl)
?tapply
class(fourCyl)
dim(fourCyl)
?mean
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
absValue(fourCyl)
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
fourCyl$cyl
misc <- fourCyl$cyl
class(misc)
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
source('~/Desktop/CourseraR/quiz3.R')
absValue(fourCyl)
misc <- absValue(fourCyl)
misc
dim(fourHp)
mtcars
fourCyl
source('~/Desktop/CourseraR/quiz3.R')
misc <- absValue(fourCyl)
fourCyl$hp
source('~/Desktop/CourseraR/quiz3.R')
misc <- absValue(fourCyl)
misc <- fourCyl[2,fourCyl$hp]
str(fourCyl)
head(fourCyl)
fourCyl$cyl[3]
fourCyl$cyl[1]
fourCyl$hp[,3]
fourCyl$hp[2,3]
fourCyl$hp[3,2]
summary(fourCyl)
dim(fourCyl)
fourCyl$hp[3,1]
fourCyl$hp[1,1]
fourCyl[1,1]
fourCyl[3,3]
fourCyl[3,2]
source('~/Desktop/CourseraR/quiz3.R')
absValue(fourCyl)
source('~/Desktop/CourseraR/quiz3.R')
absValue(fourCyl)
source('~/Desktop/CourseraR/quiz3.R')
absValue(fourCyl)
source('~/Desktop/CourseraR/quiz3.R')
absValue(fourCyl)
source('~/Desktop/CourseraR/quiz3.R')
absValue(fourCyl)
source('~/Desktop/CourseraR/quiz3.R')
absValue(fourCyl)
?mtcars
fourCyl
fourCyl$cyl[5]
source('~/Desktop/CourseraR/quiz3.R')
absValue(fourCyl)
absValue
result <- absValue(fourCyl)
result
?abs
fourHp
source('~/Desktop/CourseraR/quiz3.R')
result <- absValue(fourCyl)
result
library(datasets)
data(iris)
?iris
summary
summary(iris)
virginica <- iris$Species["virginica"]
virginica
iris
virginica <- iris$Sepal.Length[101:150,]
virginica <- iris$Sepal.Lengthc(101:150)
virginica <- iris$Sepal.Length
virginica
virSpec <- virginica[101:150]
virSpec
mean(virSpec)
apply(iris[,1:4],2,mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
?split
?mtcars
mean(mtcars$mpg, mtcars$cyl)
quit()
install.packages("swirl")
library(swirl)
ls
ls()
rm(list=ls())
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringAsFactors = False)
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim)mydf
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(-x:size)
select(cran, -x:size)
select(cran, -X:size)
-5:20
(-5:20)
-(5:20)
select(cran, -X:size)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran , r_version == "3.1.1", country == "US")
?Comparison
filter(cran , r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os equals "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, pacakge, ip_id)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran2, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
quit()
library(sqldf)
library("XML")
install.packages("httpuv")
swirl()
library(swirl)
swirl()
cran
by_package <- group_by(cran, package)
by_package
summarize(by_package.mean(size)
)
summarize(by_package.mean(size))
info
summarize(by_package, mean(size))
?n
?n_distinct
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, pack_sum$count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
?arrange
arrange(top_counts, count)
arrange(top_counts, desc(count)
)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
?chain
submit()
submit()
submit()
submit()
submit()
submit()
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 && r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <-select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb /2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_clas, count)
res <- gather(students2, sex_clas, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
students3
?gather
submit()
?spread()
?spread
submit()
submit()
?gather
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?spread
?gather
submit()
?spread
?spread()
submit()
submit()
help
?help
help(spread)
help(spread)
submit()
spread(test, class) %>%
print
submit()
reset()
submit()
submit()
submit()
submit()
submit()
source('/var/folders/gw/wtbh90jj6fv2gxwhp5xmqbbm0000gn/T//RtmpNrDY4U/script3.R')
submit()
students3
source('/var/folders/gw/wtbh90jj6fv2gxwhp5xmqbbm0000gn/T//RtmpNrDY4U/script2.R')
submit()
source('/var/folders/gw/wtbh90jj6fv2gxwhp5xmqbbm0000gn/T//RtmpNrDY4U/script3.R')
submit()
bye()
quit()
swirl()
library(swirl)
swirl()
extract_numeric("class5")
?mutate
source('/var/folders/gw/wtbh90jj6fv2gxwhp5xmqbbm0000gn/T//RtmpP1s8Hb/script4.R')
submit()
source('/var/folders/gw/wtbh90jj6fv2gxwhp5xmqbbm0000gn/T//RtmpP1s8Hb/script4.R')
?extract_numeric
source('/var/folders/gw/wtbh90jj6fv2gxwhp5xmqbbm0000gn/T//RtmpP1s8Hb/script4.R')
source('/var/folders/gw/wtbh90jj6fv2gxwhp5xmqbbm0000gn/T//RtmpP1s8Hb/script4.R')
submit(0)
submit()
source('/var/folders/gw/wtbh90jj6fv2gxwhp5xmqbbm0000gn/T//RtmpP1s8Hb/script4.R')
submit()
students4
?select
submit()
submit()
?unique
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
rbind_list(passed, failed)
sat
?select
?separate
submit()
submit()
submit()
?group_by
submit()
?mutate
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_dates <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
now("America/New_York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
quit()
library(swirl)
rm(list=ls())
swirl()
bye()
quit()
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
quit()
?read
?read.csv
getwd()
setwd("~/Desktop/CourseraR")
?rm()
View(by_package)
getwd()
?read.table
setwd("~/Desktop/CourseraR/UCI HAR Dataset/test")
ds1 <- read.table("X_test.txt", header = TRUE, sep "\t")
ds1 <- read.delim("X_test.txt", header = TRUE, sep "\t")
ds1 <- read.delim(X_test.txt, header = TRUE, sep "\t")
ds1 <- read.table("X_test.txt", header = TRUE, sep = "\t")
head(ds1)
View(ds1)
ds2 <- read.table("y_test.txt", header = TRUE, sep = "\t")
head(ds2)
rm(ds1)
rm(ds2)
ds1 <- read.table("X_test.txt", header = TRUE, sep = " ")
ds1 <- read.table("X_test.txt", header = FALSE, sep = "\t")
ds1 <- read.table("X_test.txt", header = FALSE)
dim(ds1)
class(ds1)
head(ds1)
rm(ds1)
xTest <- read.table("X_test.txt", header = TRUE)
yTest <- read.table("X_test.txt", header = TRUE)
subTest <- read.table("X_test.txt", header = TRUE)
head(subTest)
head(yTest)
subTest <- read.table("subject_test.txt", header = TRUE)
yTest <- read.table("y_test.txt", header = TRUE)
head(yTest)
dim(yTest)
class(yTest)
XTrain <- read.table("X_train.txt", header = TRUE)
getwd()
../
f
ls
setwd("~/Desktop/CourseraR/UCI HAR Dataset")
XTrain <- read.table("/train/X_train.txt", header = TRUE)
XTrain <- read.table("train/X_train.txt", header = TRUE)
yTrain <- read.table("train/y_train.txt", header = TRUE)
SubTrain <- read.table("train/subject_train.txt", header = TRUE)
headers <- read.table("features.txt", header = TRUE)
dim(headers)
head(headers)
?unique
test <- unique(headers)
test
library(swirl)
swirl()
select(cran, ip_id, package, country)
bye
quit
5:20
bye()
rm(Cran)
rm(cran)
rm(cran2)
rm(cran3)
?dplyr
?distinct
test <- nrow(distinct(headers)
)
head(test)
rm(test)
?compare
(test <- headers[!duplicated(headers, fromLast = TRUE)]
)
(test <- headers[!duplicated(headers, fromLast = TRUE)])
duplicated(headers)
duplicated(headers[,2])
!duplicated(headers[,2])
orig <- !duplicated(headers[,2])
orig
orig <- rbind(!duplicate(headers[,2]))
orig <- rbind(!duplicated(headers[,2]))
quit()
